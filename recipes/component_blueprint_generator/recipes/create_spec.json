{
  "steps": [
    {
      "type": "read_file",
      "path": "recipes/component_blueprint_generator/includes/templates/spec_template.md",
      "artifact": "spec_template"
    },
    {
      "type": "generate",
      "prompt": "You are an expert developer creating a formal component specification. Based on the candidate specification and component information, create a detailed specification document following the template structure.\n\nCandidate Specification:\n{{candidate_spec}}\n\nComponent ID: {{component_id}}\nComponent Name: {{component_name}}\nModule Path: {{module_path|default:''}}\nComponent Type: {{component_type|default:''}}\nKey Dependencies: {{key_dependencies|default:''}}\nLanguage: {{language|default:'python'}}\n\nSpecification Template:\n{{spec_template}}\n\nUse the following guides for context:\n<SPEC_DOC_GUIDE>\n{{spec_doc_guide}}\n</SPEC_DOC_GUIDE>\n\n<IMPLEMENTATION_PHILOSOPHY>\n{{implementation_philosophy}}\n</IMPLEMENTATION_PHILOSOPHY>\n\n<MODULAR_DESIGN_PHILOSOPHY>\n{{modular_design_philosophy}}\n</MODULAR_DESIGN_PHILOSOPHY>\n\nIMPORTANT GUIDELINES:\n1. Create a complete, detailed specification for the component using {{language|default:'python'}} conventions and idioms\n2. For TypeScript/JavaScript, use appropriate TypeScript interfaces, types, or React prop types\n3. Within the specification, use the component_id (\"{{component_id}}\") as the base name for all classes, modules, and file references unless explicitly overridden in the candidate spec\n4. Format your response as a FileGenerationResult with a single file named \"{{component_id}}.md\"\n\nDo not include the component name or other text in the filename - it must be exactly \"{{component_id}}.md\".",
      "model": "{{model|default:'openai:o3-mini'}}",
      "artifact": "generated_spec"
    },
    {
      "type": "write_file",
      "artifact": "generated_spec",
      "root": "{{output_root|default:'output'}}/{{target_project}}/specs"
    }
  ]
}
